# Generated by Django 5.0.14 on 2025-06-16 19:34

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0004_alter_supplier_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Catalog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "supplier",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Supplier name"
                    ),
                ),
                ("brand", models.CharField(verbose_name="Brand name")),
                (
                    "name",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Product name"
                    ),
                ),
                (
                    "part_number",
                    models.CharField(unique=True, verbose_name="Part number"),
                ),
                (
                    "volume",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Can not be less than 1 litres!"
                            )
                        ],
                        verbose_name="Volume in litres",
                    ),
                ),
                (
                    "price_per_litre",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price for litre"
                    ),
                ),
                (
                    "price_per_box",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price for box"
                    ),
                ),
                (
                    "avalible_count",
                    models.PositiveSmallIntegerField(verbose_name="Avalible count"),
                ),
                (
                    "transit_count",
                    models.PositiveSmallIntegerField(
                        verbose_name="Avalible in transit"
                    ),
                ),
                (
                    "arrival_date",
                    models.DateTimeField(verbose_name="Estimated arrival date"),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        verbose_name="Date of count and transit updated"
                    ),
                ),
            ],
            options={
                "verbose_name": "Catalog",
                "verbose_name_plural": "Catalog",
                "ordering": ["brand"],
                "indexes": [
                    models.Index(fields=["id"], name="catalog_cat_id_efd869_idx"),
                    models.Index(fields=["name"], name="catalog_cat_name_0890e6_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Product name"
                    ),
                ),
                (
                    "part_number",
                    models.CharField(unique=True, verbose_name="Part number"),
                ),
                ("brand", models.CharField(verbose_name="Brand name")),
                (
                    "package_count",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Can not be less than 1 units!"
                            )
                        ],
                        verbose_name="Package units count",
                    ),
                ),
                (
                    "volume",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Can not be less than 1 litres!"
                            )
                        ],
                        verbose_name="Volume in litres",
                    ),
                ),
                (
                    "price_per_unit",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price for box"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=240, verbose_name="Product description"
                    ),
                ),
                (
                    "specification",
                    models.CharField(
                        max_length=240, verbose_name="Product specification"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="media/product_image/",
                        verbose_name="Product image",
                    ),
                ),
                (
                    "specification_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="media/product_specification_file/",
                        verbose_name="Product specification file",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="users.supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["supplier"],
            },
        ),
    ]
